{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\project2\\\\amazon\\\\frontend\\\\src\\\\screens\\\\DashboardScreen.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport Chart from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        summary: action.payload,\n        loading: false\n      };\n    case 'FETCH_FAIL':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default function DashboardScreen() {\n  _s();\n  const [{\n    loading,\n    summary,\n    error\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/api/orders/summary', {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: summary.users && summary.users[0] ? summary.users[0].numUsers : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \" Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: summary.orders && summary.users[0] ? summary.orders[0].numOrders : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \" Orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"$\", summary.orders && summary.users[0] ? summary.orders[0].totalSales.toFixed(2) : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \" Orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), summary.dailyOrders.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: \"No Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n          width: \"100%\",\n          height: \"400px\",\n          chartType: \"AreaChart\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this),\n          data: [['Date', 'Sales'], ...summary.dailyOrders.map(x => [x._id, x.sales])]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), summary.productCategories.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: \"No Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n          width: \"100%\",\n          height: \"400px\",\n          chartType: \"PieChart\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this),\n          data: [['Category', 'Products'], ...summary.productCategories.map(x => [x._id, x.count])]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardScreen, \"V/8z9JfyGaRiLTOG3urpc3Y1/g0=\");\n_c = DashboardScreen;\nvar _c;\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useReducer","Card","Col","Row","LoadingBox","MessageBox","Store","getError","Chart","reducer","state","action","type","loading","summary","payload","error","DashboardScreen","dispatch","userInfo","fetchData","data","get","headers","Authorization","token","err","users","numUsers","orders","numOrders","totalSales","toFixed","dailyOrders","length","map","x","_id","sales","productCategories","count"],"sources":["D:/MERN/project2/amazon/frontend/src/screens/DashboardScreen.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer } from 'react';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\nimport Chart from 'react-google-charts'\r\n\r\n\r\n\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_REQUEST':\r\n        return { ...state, loading: true };\r\n      case 'FETCH_SUCCESS':\r\n        return {\r\n          ...state,\r\n          summary: action.payload,\r\n          loading: false,\r\n        };\r\n      case 'FETCH_FAIL':\r\n        return { ...state, loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default function DashboardScreen() {\r\n    const [{ loading, summary, error }, dispatch] = useReducer(reducer, {\r\n        loading: true,\r\n        error: '',\r\n      });\r\n      const { state } = useContext(Store);\r\n      const { userInfo } = state;\r\n      useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const { data } = await axios.get('/api/orders/summary', {\r\n              headers: { Authorization: `Bearer ${userInfo.token}` },\r\n            });\r\n            dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n          } catch (err) {\r\n            dispatch({\r\n              type: 'FETCH_FAIL',\r\n              payload: getError(err),\r\n            });\r\n          }\r\n        };\r\n        fetchData();\r\n      }, [userInfo]);\r\n  return (\r\n    <div>\r\n              <h1>Dashboard</h1>\r\n      {loading ? (\r\n        <LoadingBox />\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    {summary.users && summary.users[0]\r\n                      ? summary.users[0].numUsers\r\n                      : 0}\r\n                  </Card.Title>\r\n                  <Card.Text> Users</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    {summary.orders && summary.users[0]\r\n                      ? summary.orders[0].numOrders\r\n                      : 0}\r\n                  </Card.Title>\r\n                  <Card.Text> Orders</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    $\r\n                    {summary.orders && summary.users[0]\r\n                      ? summary.orders[0].totalSales.toFixed(2)\r\n                      : 0}\r\n                  </Card.Title>\r\n                  <Card.Text> Orders</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"my-3\">\r\n            <h2>Sales</h2>\r\n            {summary.dailyOrders.length === 0 ? (\r\n              <MessageBox>No Sale</MessageBox>\r\n            ) : (\r\n              <Chart\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                chartType=\"AreaChart\"\r\n                loader={<div>Loading Chart...</div>}\r\n                data={[\r\n                  ['Date', 'Sales'],\r\n                  ...summary.dailyOrders.map((x) => [x._id, x.sales]),\r\n                ]}\r\n              ></Chart>\r\n            )}\r\n          </div>\r\n          <div className=\"my-3\">\r\n            <h2>Categories</h2>\r\n            {summary.productCategories.length === 0 ? (\r\n              <MessageBox>No Category</MessageBox>\r\n            ) : (\r\n              <Chart\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart...</div>}\r\n                data={[\r\n                  ['Category', 'Products'],\r\n                  ...summary.productCategories.map((x) => [x._id, x.count]),\r\n                ]}\r\n              ></Chart>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}